apiVersion: apps/v1
kind: Deployment
metadata:
  name: shieldrule-api
spec:
  replicas: {{ .Values.api.count }}
  progressDeadlineSeconds: 1200
  selector:
    matchLabels:
      app: shieldrule-api
      role: shieldrule-api-role
  strategy: { }
  template:
    metadata:
      labels:
        app: shieldrule-api
        role: shieldrule-api-role
        {{- range $k, $v := .Values.api.labels }}
        {{ $k }}: {{ $v }}
        {{- end }}
    spec:
      {{ if .Values.service_account_role }}
      serviceAccountName: tasks
      {{ end }}
      terminationGracePeriodSeconds: 300
      containers:
        - image: "{{ .Values.api_image_url }}"
          imagePullPolicy: Always
          name: shieldrule-api
          ports:
            - containerPort: 8000
            - containerPort: 9520
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8000
            timeoutSeconds: 10
            initialDelaySeconds: 300
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8000
            timeoutSeconds: 10
            initialDelaySeconds: 300
            successThreshold: 3
          resources:
            requests:
              memory: {{ .Values.api.resources.requests.memory }}
              cpu: {{ .Values.api.resources.requests.cpu }}
            limits:
              memory: {{ .Values.api.resources.limits.memory }}
              cpu: {{ .Values.api.resources.limits.cpu }}
          env:
            - name: SHIELDRULE_ENVIRONMENT
              value: {{ .Values.SHIELDRULE_ENVIRONMENT | quote }}
            - name: SERVICE
              value: "api"
            {{- range $k, $v := .Values.api.env_vars }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          envFrom:
            {{- range .Values.api.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          volumeMounts:
            - mountPath: /tmp
              name: shieldrule-api-tmpfs
            {{ range $i, $mount := .Values.api.file_mounts -}}
            - name: {{ $mount.name }}
              readOnly: true
              mountPath: {{ $mount.mount_path }}/{{ $mount.file_name }}
            {{ end }}
          securityContext:
            capabilities:
              drop:
                - all
        {{ if .Values.enable_prometheus }}
        - name: prometheus
          imagePullPolicy: Always
          resources:
            requests:
              memory: 256Mi
              cpu: 128m
            limits:
              memory: 256Mi
              cpu: 128m
          image: "{{ .Values.prometheus_image_url }}"
          ports:
            - containerPort: 12346
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
        {{ end }}
      restartPolicy: Always
      volumes:
        - emptyDir: { }
          name: shieldrule-api-tmpfs
        {{ range $i, $mount := .Values.api.file_mounts -}}
        - name: {{ $mount.name }}
          configMap:
            name: {{ $mount.config_map_name }}
            items:
              - key: {{ $mount.name }}
                path: {{ $mount.file_name }}
        {{ end }}
status: { }
