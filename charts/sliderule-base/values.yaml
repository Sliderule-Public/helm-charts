# -- URL of web image
web_image_url:
# -- URL of api image
api_image_url:
# -- URL of prometheus image
prometheus_image_url:
# -- if true, will deploy the jobs service
deploy_jobs: true
# -- if true, will deploy the prometheus service as a sidecar in the API pod
enable_prometheus: true

# Optional AWS Service account role to pass, this is being deprecated in the future in favor of service_account_name
service_account_role: ""

# Optional service account name to pass to both the API and Web deployments
service_account_name: ""

is_gcp: false

# -- port to expose NodePort services on
ports:
  web: 31255
  api: 31257
  grpc: 31258
  jobs: 31259

# -- default resources for the web service
web:
  # -- number of web pods to deploy
  count: 2
  labels:
#    foo: bar
  secrets: [] # list of K8S secret names to pass to the container
  env_vars: {} # key value pairs to get injected into the container
  service:
    nodePort: 31255
    name: web
    protocol: TCP
    port: 8000
    targetPort: 8000
    annotations: {}
  resources:
    requests:
      # -- memory request for each web pod
      memory: "1024Mi"
      # -- cpu request for each web pod
      cpu: "512m"
    limits:
      # -- memory limit for each web pod
      memory: "1024Mi"
      # -- cpu limit for each web pod
      cpu: "512m"
  nodeSelector: {}
  affinity: {}
  tolerations: []
  horizontalPodAutoscaling:
    enabled: true
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: shieldrule-web
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 50

# -- default resources for the API service
api:
  # -- number of API pods to deploy
  count: 2
  # If true, will create the api-secret secret needed for the API service. If false, api-secret needs to be created with whatever your secret management solution is.
  add_secret: false
  labels:
#    foo: bar
#    lorem: ipsum
  secrets: [] # list of K8S secret names to pass to the container
  env_vars: {} # key value pairs to get injected into the container
  file_mounts:
#    - name: # name of the file mount
#      config_map_name: #name of the config map to mount
#      mount_path: # path to mount the config map to
#      file_name: # name of the file to mount
  service:
    nodePort: 31257
    name: api
    protocol: TCP
    port: 8000
    targetPort: 8000
    annotations: {}
  resources:
    requests:
      # -- memory request for each API pod
      memory: "14500Mi"
      # -- cpu request for each API pod
      cpu: "3400m"
    limits:
      # -- memory limit for each API pod
      memory: "14500Mi"
      # -- cpu limit for each API pod
      cpu: "3400m"
  nodeSelector: {}
  affinity: {}
  tolerations: []
  horizontalPodAutoscaling:
    enabled: true
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: shieldrule-api
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 50