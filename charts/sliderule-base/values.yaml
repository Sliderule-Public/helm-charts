# -- ARN of the task role to pass to the service account
service_account_role:
# -- ARN of the IAM role to pass for the ALB controller
alb_controller_service_account_role:
# -- ACM certificate to pass to the optional ALB
alb_cert_arn:
# -- if true, will attempt to launch a load balancer
enable_aws_alb: true
# -- AWS security group for Sliderule application pods
pod_security_group:
# -- Subnets where the optional Application Load Balancer is deployed
public_subnet_ids:
# -- AWS IAM Role for the node group autoscaler service
autoscaler_service_account_role:
# -- URL of web image
web_image_url:
# -- URL of api image
api_image_url:
# -- URL of prometheus image
prometheus_image_url:
# -- if true, will deploy the jobs service
deploy_jobs: true
# -- if true, will deploy the prometheus service as a sidecar in the API pod
enable_prometheus: true

# -- port to expose NodePort services on
ports:
  web: 31255
  api: 31257
  grpc: 31258
  jobs: 31259

# -- default resources for the web service
web:
  # -- number of web pods to deploy
  count: 2
  labels:
  service:
    nodePort: 31255
    name: web
    protocol: TCP
    port: 8000
    targetPort: 8000
  resources:
    requests:
      # -- memory request for each web pod
      memory: "1024Mi"
      # -- cpu request for each web pod
      cpu: "512m"
    limits:
      # -- memory limit for each web pod
      memory: "1024Mi"
      # -- cpu limit for each web pod
      cpu: "512m"

# -- default resources for the API service
api:
  # -- number of API pods to deploy
  count: 2
  labels:
  service:
    nodePort: 31257
    name: api
    protocol: TCP
    port: 8000
    targetPort: 8000
  resources:
    requests:
      # -- memory request for each API pod
      memory: "14500Mi"
      # -- cpu request for each API pod
      cpu: "3400m"
    limits:
      # -- memory limit for each API pod
      memory: "14500Mi"
      # -- cpu limit for each API pod
      cpu: "3400m"


# -- POSTGRES_HOST from the Terraform stack
POSTGRES_HOST:
# -- POSTGRES_PORT from the Terraform stack
POSTGRES_PORT: 5432
# -- Name of postgresql DB to use
POSTGRES_DB: sliderule
# -- Get from us
AUDIENCE_URL:
# -- Get from us
ISSUER_URL:
# -- Get from us
AUTH0_ENVIRONMENT_PREFIX:
# -- If true, will reset and run migrations against a DB initially
RESET_DB: false
# -- Whether to use Auth0
USE_AUTH_0: true
# -- Should be production, for app purposes
ENVIRONMENT: Production
# -- Get from us
SENTRY_ENVIRONMENT:
# -- Get from us
METRICS_NAMESPACE:
# -- Get from us
SLACK_REDIRECT_URI:
# -- ENVIRONMENT from the Terraform stack
SHIELDRULE_ENVIRONMENT:
# -- Get from us
EMAIL_USER_TOKEN:
# -- Get from us
EMAIL_USER_KEY:
# -- Whether to use instance profile
USE_INSTANCE_PROFILE: true
# -- SERVER_BUCKET from the Terraform stack
SERVER_BUCKET:
# -- REDIS_HOST address from the Terraform stack
REDIS_HOST:
# -- REDIS_PORT address from the Terraform stack
REDIS_PORT: 6379
# -- Whether to use Redis
USE_REDIS: true
# -- Whether to use SQS
USE_SQS: true
# -- SQS_QUEUE_NAME from the Terraform stack
SQS_QUEUE_NAME:
# -- SQS_URL url from the Terraform stack
SQS_URL: